<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "boardTest">	<!-- namespace : package 이름과 동일한 역할 -->
	<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL 문을 기술한다
	
	사용할 수 있는 기본적인 태그들
	
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 주요 속성들
	
	1) id(필수값): 해당 SQL문을 호출할 때 namespace 값과 연결하여 사용하는 쿼리이름
	
	2) parameterType : SQL문에 사용될 데이터를 담은 객체타입을 지정한다 => 생략 가능
					   (보통 VO 클래스, 자바의 기본타입명 등이 사용된다)
					   
	3) resultType : select문을 실행한 결과를 담기 위한 객체타입을 지정한다
					(보통 VO 클래스, 자바의 기본타입명 등이 사용된다)
					
	4) resultMap : 결과 레크드 컬럼명과 VO 객체의 속성명이 다를 경우에 적절한 매핑작업을 위해 사용한다
 -->			

	<insert id = "insertBoard" parameterType = "kr.or.ddit.board.vo.BoardVO">
		
		INSERT INTO JDBC_BOARD (BOARD_NO, BOARD_TITLE, BOARD_WRITER, BOARD_DATE, BOARD_CONTENT)
		VALUES (BOARD_SEQ.NEXTVAL, #{boardTitle} , #{boardWriter} , SYSDATE, #{boardContent} )
		
	</insert>

	
	<update id = "updateBoard" parameterType = "kr.or.ddit.board.vo.BoardVO">
	
		UPDATE JDBC_BOARD
		SET BOARD_TITLE = #{boardTitle}, BOARD_WRITER = #{boardWriter}, BOARD_CONTENT = #{boardContent}
		WHERE BOARD_NO = #{boardNo}
		
	</update>
	

	<delete id = "deleteBoard" parameterType = "Int">
		
		DELETE FROM JDBC_BOARD WHERE BOARD_NO = #{boardNo}
	
	</delete>
	
	
	<select id = "selectAllBoard" resultType = "kr.or.ddit.board.vo.BoardVO">
		
		SELECT BOARD_NO AS boardNo,
			   BOARD_TITLE AS boardTitle,
			   BOARD_WRITER AS boardWriter,
			   BOARD_DATE AS regDt,
			   BOARD_CONTENT AS boardContent
		FROM JDBC_BOARD
		
	</select>
	
</mapper>